# -*- coding: utf-8 -*-
"""PyTorch-Tensors.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zLy1mfwFFnwuv7O6OQ7NIIG8tlyu857Y
"""

import torch
import numpy as np
torch.__version__

arr_1 = np.array([1,2,3,4,5,6,7,8])
type(arr_1)

"""#### Linked Tensor:"""

ts = torch.from_numpy(arr_1)
type(ts)

torch.as_tensor(arr_1)

arr_2d = np.arange(0.0, 20.0)
arr_2d

arr_2d = arr_2d.reshape(4, 5)
arr_2d

ts_2 = torch.from_numpy(arr_2d)
ts_2

arr_1[0] = 67
print(arr_1)
print(ts)

"""#### Tensor not linked to numpy :"""

arr_3 = np.arange(1, 9)
arr_3

ts_3 = torch.tensor(arr_3)
ts_3

arr_3[0] = 999
arr_3

ts_3

ts3 = torch.Tensor(arr_3)
ts3

# Allocate a memory/placeholder
torch.empty(3,3)

torch.zeros(4, 4, dtype=torch.int64)

torch.arange(0, 18, 2).reshape(3,3)

torch.linspace(0, 10, 18)

torch.tensor([1,2,3])

ts_2 = ts_2.type(torch.int64)
ts_2

"""#### Random samples from uniform distribution :"""

torch.rand(5,6)

"""#### Random samples from standard normal distribution :"""

torch.randn(5,6)

torch.randint(low=0, high=10, size=(6,6))
# High is exlusive

torch.rand_like(ts3)

torch.randn_like(ts3)

"""#### Set seed for random values : """

torch.manual_seed(100)
torch.rand(2,3)

torch.manual_seed(100)
torch.rand(2,3)

torch.rand(2,3)


